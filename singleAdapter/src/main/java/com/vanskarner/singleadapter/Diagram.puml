@startuml
'https://plantuml.com/class-diagram
class SingleAdapter{
    - mapAdapter: Map<Integer, BindAdapter<BindItem, RecyclerView.ViewHolder>>
    - defaultDiff: BaseDiffCallback<? extends BindItem>
    - listDiffer: AsyncListDiffer<BindItem>
    - endlessLoad: EndlessLoad

    + onCreateViewHolder(ViewGroup parent, int viewType): RecyclerView.ViewHolder
    + onBindViewHolder(RecyclerView.ViewHolder holder, int position): void
    + getItemViewType(int position): int
    + getItemCount(): int
    + isLoad(int position): boolean
    + add(final BindAdapter bindAdapter): void
    + set(final List<? extends BindItem> items): void
    + set(final BaseDiffCallback<? extends BindItem> diffCallback): void
    + set(final int loadLayoutId): void
    + setVisibleProgress(boolean isVisible): void
    + getItem(int position): <T extends BindItem> T
    - getList(): List<BindItem>
    - getBindItem(int position): BindItem
    - filterMap(int position): Map.Entry<Integer, BindAdapter<BindItem, RecyclerView.ViewHolder>>
    - isCorrectBindAdapter(BindAdapter bindAdapter, BindItem bindItem): boolean
    - filterError(BindItem item): RuntimeException
}
class EndlessLoad{
    - listDiffer: AsyncListDiffer<BindItem>
    - adapter: LoadAdapter
    - loadItem: LoadBindItem

    + getAdapter(): LoadAdapter
    + isLoadInstance(BindItem item): boolean
    + setVisibleProgress(boolean isVisible): void
    - createItems(): List<BindItem>
}
class LoadAdapter{
    - layoutId: int
    + setLayoutId(int layoutId): void
    + getLayoutId(): int
}
class LoadBindItem
abstract class BaseDiffCallback<BI extends BindItem>{
    + {abstract} areItemsTheSame(): boolean
    + {abstract} areContentsTheSame(): boolean
}
class DefaultBaseDiff
interface BindItem
interface OnCreateVH<VH extends ViewHolder>{
    + onCreateViewHolder(ViewGroup parent, LayoutInflater inflater): VH
}
interface OnBindVH<BI extends BindItem,VH extends ViewHolder>{
    + onBindViewHolder(VH viewHolder, BI item): void
}
interface BindAdapter<BI extends BindItem,VH extends ViewHolder>{
    + getClassItem(): Class<BI>
    + filter(BI item): boolean
}

SingleAdapter --> BindAdapter
SingleAdapter --> BindItem
SingleAdapter --> BaseDiffCallback
SingleAdapter --> EndlessLoad
BindItem <.. OnBindVH
BindAdapter --|> OnCreateVH
BindAdapter --|> OnBindVH
BaseDiffCallback ..> BindItem
BaseDiffCallback <|-- DefaultBaseDiff
EndlessLoad --> BindItem
EndlessLoad --> LoadAdapter
EndlessLoad --> LoadBindItem
LoadAdapter --|> OnCreateVH
LoadBindItem --|> BindItem

@enduml